rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOrganizer() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'organizer';
    }

    function isManager() {
        return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow a user to create their own document
      allow create: if isOwner(userId);
      
      // ANY authenticated user can read user profiles (for leaderboards, etc.)
      allow get: if isAuthenticated();
      allow list: if isAuthenticated();
      
      // A user can only update their own name. Organizers can update any user.
      allow update: if (isOwner(userId) && request.resource.data.keys().hasOnly(['name'])) || isOrganizer();

      // Only organizers can delete users.
      allow delete: if isOrganizer();
    }
    
    // Rules for 'point_history' subcollection
    match /users/{userId}/point_history/{historyId} {
        // Organizers or managers can create history entries.
        allow create: if isOrganizer() || isManager();
        
        // Only the user themselves or an organizer can read point history
        allow read, list: if isOwner(userId) || isOrganizer();
        
        // History is immutable
        allow update, delete: if false;
    }

    // Rules for the 'houses' collection
    match /houses/{houseId} {
      // Anyone can read house data
      allow read: if true;
      // Only organizers can create, update, or delete houses
      allow write: if isOrganizer();
    }
    
    // Rules for the 'communities' collection
    match /communities/{communityId} {
      // Anyone can read community data
      allow read: if true;
      // Only organizers can create, update, or delete communities
      allow write: if isOrganizer();
    }
    
    // Rules for the 'metadata' collection
    match /metadata/{docId} {
        // Only organizers can read/write metadata
        allow read, write: if isOrganizer();
    }
  }
}
