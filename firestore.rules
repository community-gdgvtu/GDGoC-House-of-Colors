rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Houses can be read by any authenticated user. Admins can write.
    match /houses/{houseId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    match /users/{userId} {
      // Admins can list users if they query by role. 
      // Authenticated users can list users if they query by houseId.
      allow list: if (isAdmin() && request.query.where.keys().hasAny(['role'])) ||
                   (request.auth != null && request.query.where.keys().hasAll(['houseId']));
      
      // A user can create their own document. Admins can create any user.
      allow create: if request.auth.uid == userId || isAdmin();
      
      // A user can read their own data. Admins can read any user data.
      allow get: if request.auth.uid == userId || isAdmin();
      
      // A user can update their own data. Admins can update any user.
      allow update: if request.auth.uid == userId || isAdmin();
      
      // Only admins can delete users.
      allow delete: if isAdmin();
      
      // Point history subcollection rules
      match /point_history/{historyId} {
        // A user can read their own point history. Admins can read anyone's.
        allow list, get: if request.auth.uid == userId || isAdmin();
        // Only admins can create point history records.
        allow create: if isAdmin();
        // Point history is immutable.
        allow update, delete: if false;
      }
    }
  }
}
